services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://testuser:testpassword@db:5432/testdb
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    volumes:
      - .:/app
    command: >
      sh -c "
        python -m pip install --upgrade pip && 
        python -m pip install sqlalchemy asyncpg && 
        python -c 'from app.initial_data import run_init_db; run_init_db()' && 
        uvicorn app.main:app --host 0.0.0.0 --port 8000
      "

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=testdb
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpassword
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
